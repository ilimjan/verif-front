# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  containerRegistry: reo-docker-reg_rt
  tag: $(Build.SourceBranchName)-$(Build.BuildId)
  env: test
trigger:
- main

pool:
  name: Reo Ubuntu

jobs:
- job: back
  steps:
  
  - task: DockerInstaller@0
    displayName: 'Установка Docker'
    inputs:
      dockerVersion: '20.10.3'
  - task: Docker@2
    inputs:
      containerRegistry: 'reo-docker-reg_rt'
      command: 'login'
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'reo-docker-reg_rt'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeFileArgs: 'APP_ENV=$(env)'
      action: 'Build services'
      includeSourceTags: true
      includeLatestTag: true
      arguments: '--no-cache'
  
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'reo-docker-reg_rt'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeFileArgs: 'APP_ENV=$(env)'
      action: 'Push services'
      includeSourceTags: true
      includeLatestTag: true
  
  - task: PublishBuildArtifacts@1
    displayName: docker-compose.yml
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/docker-compose.yml'
      ArtifactName: 'docker'
      publishLocation: 'Container' 